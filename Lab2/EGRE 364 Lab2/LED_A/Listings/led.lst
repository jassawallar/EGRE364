


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             mydata, DATA, READWRITE
    2 00000000         
    3 00000000 3F 06 5B 
              4F 66 6D 
              7D 07 7F 
              6F       segt    DCB              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0
x6D, 0x7D, 0x07, 0x7F, 0x6F 
                                                            ;, 0x77, 0x7C, 0x39
                                                            , 0x5E, 0x79 ;0x71
    4 0000000A         
    5 0000000A 40000000 
                       PERIPH_BASE
                               EQU              0x40000000
    6 0000000A         
    7 0000000A         
    8 0000000A                 AREA             mycode, CODE, READONLY
    9 00000000                 EXPORT           __main
   10 00000000                 ENTRY
   11 00000000         __main  PROC
   12 00000000         
   13 00000000         
   14 00000000 F7FF FFFE       BL               gpio_init
   15 00000004         
   16 00000004         
   17 00000004 F04F 4080       LDR              r0, =PERIPH_BASE ;PERIPH_BASE
   18 00000008 F100 6000       ADD              r0, #0x08000000 
                                                            ;AHB2PERIPH_BASE
   19 0000000C F500 5180       ADD              r1, r0, #0x01000 ;GPIOE_BASE
   20 00000010 F500 52E0       ADD              r2, r0, #0x1C00 ;GPIOH_BASE
   21 00000014 F100 0700       ADD              r7, r0, #0x0000 ;GPIOA_BASE
   22 00000018         
   23 00000018         
   24 00000018 4849            LDR              r0, =segt
   25 0000001A F04F 0300       MOV              r3, #0
   26 0000001E         
   27 0000001E         
   28 0000001E F04F 0B20       LDR              r11, = 0x0020 ;down
   29 00000022 F04F 0808       LDR              r8, = 0x0008 ;up
   30 00000026         
   31 00000026         
   32 00000026         
   33 00000026 5CC4    loop    LDRB             r4, [r0,r3]
   34 00000028         
   35 00000028 694D            LDR              r5, [r1,#0x14]
   36 0000002A F46F 467C       LDR              r6, =0xFFFF03FF
   37 0000002E EA05 0506       AND              r5, r6
   38 00000032 EA45 2584       ORR              r5, r4, LSL #10
   39 00000036 614D            STR              r5, [r1,#0x14]
   40 00000038         
   41 00000038 6955            LDR              r5, [r2, #0x14]
   42 0000003A F06F 0601       LDR              r6, =0xFFFFFFFE
   43 0000003E EA05 0506       AND              r5, r6
   44 00000042 EA45 1594       ORR              r5, r4, LSR #6
   45 00000046 6155            STR              r5, [r2,#0x14]
   46 00000048         
   47 00000048 F8D7 9010       LDR              r9, [r7,#0x10] ; IDR address
   48 0000004C F04F 0AFF       LDR              r10, =0x00FF
   49 00000050 EA09 090A       AND              r9, r10
   50 00000054         



ARM Macro Assembler    Page 2 


   51 00000054         
   52 00000054 F7FF FFFE       BL               Delay
   53 00000058 45C8            CMP              r8, r9
   54 0000005A D002            BEQ              done
   55 0000005C 45CB            CMP              r11,r9
   56 0000005E D007            BEQ              finish
   57 00000060         
   58 00000060 E7E1            B                loop
   59 00000062         
   60 00000062 F103 0301 
                       done    ADD              r3, #1
   61 00000066 2B0A            CMP              r3, #10
   62 00000068 D1DD            BNE              loop
   63 0000006A F04F 0300       MOV              r3, #0
   64 0000006E E7DA            B                loop
   65 00000070         
   66 00000070 F1A3 0301 
                       finish  SUB              r3, #1
   67 00000074 F1B3 3FFF       CMP              r3, #-1
   68 00000078 D1D5            BNE              loop
   69 0000007A F04F 0309       MOV              r3, #9
   70 0000007E E7D2            B                loop
   71 00000080         
   72 00000080         
   73 00000080 4770            bx               lr
   74 00000082                 ENDP
   75 00000082         
   76 00000082         Delay   PROC
   77 00000082 B402            push             {r1}
   78 00000084         
   79 00000084 F44F 21C0       ldr              r1, =0x60000 ;initial value for
                                                             loop counter
   80 00000088 BF00    again   NOP                          ;execute two no-ope
                                                            ration instructions
                                                            
   81 0000008A BF00            NOP
   82 0000008C 3901            subs             r1, #1
   83 0000008E D1FB            bne              again
   84 00000090 BC02            pop              {r1}
   85 00000092 4770            bx               lr
   86 00000094                 ENDP
   87 00000094         
   88 00000094         gpio_init
                               PROC
   89 00000094 F04F 4080       LDR              r0, =PERIPH_BASE
   90 00000098 F500 3000       ADD              r0, #0x20000 ;AHB1PERIPH_BASE
   91 0000009C F500 5080       ADD              r0, #0x1000 ;RCC_BASE
   92 000000A0 6CC1            LDR              r1, [r0,#0x4C] ;RCC->AHB2ENR
   93 000000A2 F041 0191       ORR              r1,#0x91    ;Enable GPIOE and G
                                                            PIOH abd GPIOA
   94 000000A6 64C1            STR              r1, [r0,#0x4C]
   95 000000A8         
   96 000000A8 F04F 4080       LDR              r0, =PERIPH_BASE ;PERIPH_BASE
   97 000000AC F100 6000       ADD              r0, #0x08000000 
                                                            ;AHB2PERIPH_BASE
   98 000000B0 F500 5080       ADD              r0, #0x01000 ;GPIOE_BASE
   99 000000B4         
  100 000000B4 6801            LDR              r1, [r0,#0] ;PE10-PE15
  101 000000B6 4A23            LDR              r2, =0x000FFFFF



ARM Macro Assembler    Page 3 


  102 000000B8 EA01 0102       AND              r1,r2       ;GPIOE->MODER   &= 
                                                             ~(0xFFFU << (2*10)
                                                            )
  103 000000BC 4A22            LDR              r2,=0x55500000
  104 000000BE EA41 0102       ORR              r1,r2       ;GPIOE->MODER |= (0
                                                            x555U<< (2*10))
  105 000000C2 6001            STR              r1, [r0,#0]
  106 000000C4         
  107 000000C4 8881            LDRH             r1, [r0,#4] ;GPIOE->OTYPER
  108 000000C6 F240 32FF       LDR              r2, =0x03FF
  109 000000CA EA01 0102       AND              r1,r2       ;GPIOE->OTYPER &= ~
                                                            (0x3FU<<10)
  110 000000CE 8081            STRH             r1, [r0,#4]
  111 000000D0         
  112 000000D0 6881            LDR              r1, [r0,#8] ;GPIOE->OSPEEDR
  113 000000D2 4A1E            LDR              r2, =0xFFF00000
  114 000000D4 EA41 0102       ORR              r1, r2      ;GPIOE->OSPEEDR |= 
                                                            (0xFFFU<<(2*10))
  115 000000D8 6081            STR              r1, [r0,#8]
  116 000000DA         
  117 000000DA 68C1            LDR              r1, [r0,#0x0C] ;GPIOE->PUPDR
  118 000000DC 4A19            LDR              r2, =0x000FFFFF
  119 000000DE EA01 0102       AND              r1, r2      ;GPIOE->PUPDR &= ~(
                                                            0xFFFU << (2*10))
  120 000000E2 60C1            STR              r1, [r0,#0x0C]
  121 000000E4         
  122 000000E4         
  123 000000E4 F04F 4080       LDR              r0, =PERIPH_BASE ;PERIPH_BASE
  124 000000E8 F100 6000       ADD              r0, #0x08000000 
                                                            ;AHB2PERIPH_BASE
  125 000000EC F500 50E0       ADD              r0, #0x01C00 ;GPIOH_BASE
  126 000000F0         
  127 000000F0 6801            LDR              r1, [r0,#0] ;PH0
  128 000000F2 F021 0103       AND              r1,#0xFFFFFFFC ;GPIOE->MODER   
                                                            &=  ~(3)
  129 000000F6 F041 0101       ORR              r1,#0x1     ;GPIOE->MODER |= (1
                                                            )
  130 000000FA 6001            STR              r1, [r0,#0]
  131 000000FC         
  132 000000FC 8881            LDRH             r1, [r0,#4] ;GPIOE->OTYPER
  133 000000FE F64F 72FE       LDR              r2, =0xFFFE
  134 00000102 EA01 0102       AND              r1, r2      ;GPIOE->OTYPER &= ~
                                                            (0x1)
  135 00000106 8081            STRH             r1, [r0,#4]
  136 00000108         
  137 00000108 6881            LDR              r1, [r0,#8] ;GPIOE->OSPEEDR
  138 0000010A F041 0103       ORR              r1,#0x3     ;GPIOE->OSPEEDR |= 
                                                            (3)
  139 0000010E 6081            STR              r1, [r0,#8]
  140 00000110         
  141 00000110 68C1            LDR              r1, [r0,#0x0C] ;GPIOE->PUPDR
  142 00000112 F021 0103       AND              r1,#0xFFFFFFFC ;GPIOE->PUPDR &=
                                                             ~(0x3)
  143 00000116 60C1            STR              r1, [r0,#0x0C]
  144 00000118         
  145 00000118         ;----------------------------------;
  146 00000118         
  147 00000118 F04F 4080       LDR              r0, =PERIPH_BASE ;PERIPH_BASE
  148 0000011C F100 6000       ADD              r0, #0x08000000 



ARM Macro Assembler    Page 4 


                                                            ;AHB2PERIPH_BASE
  149 00000120 F100 0000       ADD              r0, #0x0    ;GPIOA_BASE
  150 00000124         
  151 00000124 6801            LDR              r1, [r0,#0] ;PH0
  152 00000126 F421 614C       AND              r1,#0xFFFFF33F ;GPIOE->MODER   
                                                            &=  ~(3)
  153 0000012A F041 0101       ORR              r1,#0x1     ;GPIOE->MODER |= (1
                                                            )
  154 0000012E 6001            STR              r1, [r0,#0]
  155 00000130         
  156 00000130         
  157 00000130 68C1            LDR              r1, [r0,#0x0C] ;GPIOE->PUPDR
  158 00000132 F001 0100       AND              r1,#0x00000000 ;GPIOE->PUPDR &=
                                                             ~(0x3)
  159 00000136 F441 6108       ORR              r1, #0x00000880
  160 0000013A 60C1            STR              r1, [r0,#0x0C]
  161 0000013C         
  162 0000013C         
  163 0000013C         
  164 0000013C 4770            BX               LR
  165 0000013E                 ENDP
  166 0000013E         
  167 0000013E         
  168 0000013E         
  169 0000013E                 END
              00 00 00000000 
              000FFFFF 
              55500000 
              FFF00000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\led.d -o.\objects\led.o -IC:\Users\Steven\Downloads\L
ED_A\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\1.2.0\Device\Include -IC:\Kei
l_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 521" --predefine="STM32L476xx SETA 1" --list=.\listings\led.lst led.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mydata 00000000

Symbol: mydata
   Definitions
      At line 1 in file led.s
   Uses
      None
Comment: mydata unused
segt 00000000

Symbol: segt
   Definitions
      At line 3 in file led.s
   Uses
      At line 24 in file led.s
Comment: segt used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Delay 00000082

Symbol: Delay
   Definitions
      At line 76 in file led.s
   Uses
      At line 52 in file led.s
Comment: Delay used once
__main 00000000

Symbol: __main
   Definitions
      At line 11 in file led.s
   Uses
      At line 9 in file led.s
Comment: __main used once
again 00000088

Symbol: again
   Definitions
      At line 80 in file led.s
   Uses
      At line 83 in file led.s
Comment: again used once
done 00000062

Symbol: done
   Definitions
      At line 60 in file led.s
   Uses
      At line 54 in file led.s
Comment: done used once
finish 00000070

Symbol: finish
   Definitions
      At line 66 in file led.s
   Uses
      At line 56 in file led.s
Comment: finish used once
gpio_init 00000094

Symbol: gpio_init
   Definitions
      At line 88 in file led.s
   Uses
      At line 14 in file led.s
Comment: gpio_init used once
loop 00000026

Symbol: loop
   Definitions
      At line 33 in file led.s
   Uses
      At line 58 in file led.s
      At line 62 in file led.s
      At line 64 in file led.s
      At line 68 in file led.s
      At line 70 in file led.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


mycode 00000000

Symbol: mycode
   Definitions
      At line 8 in file led.s
   Uses
      None
Comment: mycode unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PERIPH_BASE 40000000

Symbol: PERIPH_BASE
   Definitions
      At line 5 in file led.s
   Uses
      At line 17 in file led.s
      At line 89 in file led.s
      At line 96 in file led.s
      At line 123 in file led.s
      At line 147 in file led.s

1 symbol
347 symbols in table
