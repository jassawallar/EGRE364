#include "LED.h"


//******************************************************************************************
// User LEDs: 
//   LD4 Red = PB2    LD5 Green = PE8
// Note: The Green LED is yellow on my board.
//       PE8 is also the TIM1_CH1N for ADC Triggers.
//******************************************************************************************
void LED_Init(void){
	/* Enable GPIOs clock */ 	
	RCC->AHB2ENR |=   RCC_AHB2ENR_GPIOAEN | RCC_AHB2ENR_GPIOEEN;
	
	//////////////////////////////////////////////////////////////////////////////////////////
	// LD4 Red = PA
	//////////////////////////////////////////////////////////////////////////////////////////
	// GPIO Mode: Input(00, reset), Output(01), AlterFunc(10), Analog(11, reset)
	GPIOA->MODER = ~(3U<<(2*1));  
	GPIOA->MODER |= 1U<<(2*1);      
	GPIOA->MODER = ~(3U<<(2*0));  
	GPIOA->MODER |= 1U<<(2*0);  
	GPIOA->MODER = ~(3U<<(2*3));  
	GPIOA->MODER |= 1U<<(2*3); 
	GPIOA->MODER = ~(3U<<(2*5));  
	GPIOA->MODER |= 1U<<(2*5); 
	GPIOA->MODER = ~(3U<<(2*2));  
	GPIOA->MODER |= 1U<<(2*2); 
		
	// GPIO Speed: Low speed (00), Medium speed (01), Fast speed (10), High speed (11)
	GPIOA->OSPEEDR &= ~(3U<<(2*1));
	GPIOA->OSPEEDR |=   3U<<(2*1);  // High speed
	GPIOA->OSPEEDR &= ~(3U<<(2*0));
	GPIOA->OSPEEDR |=   3U<<(2*0);
	GPIOA->OSPEEDR &= ~(3U<<(2*2));
	GPIOA->OSPEEDR |=   3U<<(2*2); 
	GPIOA->OSPEEDR &= ~(3U<<(2*3));
	GPIOA->OSPEEDR |=   3U<<(2*3); 
	GPIOA->OSPEEDR &= ~(3U<<(2*5));
	GPIOA->OSPEEDR |=   3U<<(2*5); 
	
	
	// GPIO Output Type: Output push-pull (0, reset), Output open drain (1) 
	GPIOA->OTYPER &= ~(1U<<1);      // Push-pull
	GPIOA->OTYPER &= ~(1U<<0);   		// Push-pull
	GPIOA->OTYPER &= ~(1U<<3);    	// Push-pull
	GPIOA->OTYPER &= ~(1U<<2); 			// Push-pull
	GPIOA->OTYPER &= ~(1U<<5); 			// Push-pull
	
	// GPIO Push-Pull: No pull-up, pull-down (00), Pull-up (01), Pull-down (10), Reserved (11)
	GPIOA->PUPDR   &= ~(3U<<(2*1));	// No pull-up, no pull-down
	GPIOA->PUPDR   &= ~(3U<<(2*0));  // No pull-up, no pull-down
	GPIOA->PUPDR   &= ~(3U<<(2*3));  // No pull-up, no pull-down
	GPIOA->PUPDR   &= ~(3U<<(2*2));  // No pull-up, no pull-down
	GPIOA->PUPDR   &= ~(3U<<(2*5));  // No pull-up, no pull-down
	
	
	
	//////////////////////////////////////////////////////////////////////////////////////////
	// LD5 Green = PE 11 10 12 13 14 
	//////////////////////////////////////////////////////////////////////////////////////////
	// GPIO Mode: Input(00, reset), Output(01), AlterFunc(10), Analog(11, reset)
	GPIOE->MODER = ~(3U<<(2*11));  
	GPIOE->MODER |= 1U<<(2*11);      //  Output(01)
	GPIOE->MODER = ~(3U<<(2*12));  
	GPIOE->MODER |= 1U<<(2*12);
	GPIOE->MODER = ~(3U<<(2*10));  
	GPIOE->MODER |= 1U<<(2*10);    
	GPIOE->MODER = ~(3U<<(2*14));  
	GPIOE->MODER |= 1U<<(2*14); 
	GPIOE->MODER = ~(3U<<(2*13));  
	GPIOE->MODER |= 1U<<(2*13); 
		
	// GPIO Speed: Low speed (00), Medium speed (01), Fast speed (10), High speed (11)
	GPIOE->OSPEEDR &= ~(3U<<(2*11));
	GPIOE->OSPEEDR |=   3U<<(2*11);  // High speed
	GPIOE->OSPEEDR &= ~(3U<<(2*12));
	GPIOE->OSPEEDR |=   3U<<(2*12); 
	GPIOE->OSPEEDR &= ~(3U<<(2*10));
	GPIOE->OSPEEDR |=   3U<<(2*10); 
	GPIOE->OSPEEDR &= ~(3U<<(2*14));
	GPIOE->OSPEEDR |=   3U<<(2*14);
	GPIOE->OSPEEDR &= ~(3U<<(2*13));
	GPIOE->OSPEEDR |=   3U<<(2*13); 
	
	// GPIO Output Type: Output push-pull (0, reset), Output open drain (1) 
	GPIOE->OTYPER &= ~(1U<<11);       // Push-pull
	GPIOE->OTYPER &= ~(1U<<12); 
	GPIOE->OTYPER &= ~(1U<<13); 
	GPIOE->OTYPER &= ~(1U<<14); 
	GPIOE->OTYPER &= ~(1U<<10);       
	
	// GPIO Push-Pull: No pull-up, pull-down (00), Pull-up (01), Pull-down (10), Reserved (11)
	GPIOE->PUPDR   &= ~(3U<<(2*11));  // No pull-up, no pull-down
	GPIOE->PUPDR   &= ~(3U<<(2*12));  // No pull-up, no pull-down
	GPIOE->PUPDR   &= ~(3U<<(2*10));  // No pull-up, no pull-down
	GPIOE->PUPDR   &= ~(3U<<(2*13));  // No pull-up, no pull-down
	GPIOE->PUPDR   &= ~(3U<<(2*14));  // No pull-up, no pull-down
}

//******************************************************************************************
// Turn Red LED On
//******************************************************************************************
void Red_LED_On(void){
	GPIOB->ODR |= GPIO_ODR_ODR_2;
}

//******************************************************************************************
// Turn Red LED Off
//******************************************************************************************
void Red_LED_Off(void){
	GPIOB->ODR &= ~GPIO_ODR_ODR_2;
}

//******************************************************************************************
// Toggle Red LED 
//******************************************************************************************
void Red_LED_Toggle(void){
	GPIOB->ODR ^= GPIO_ODR_ODR_2;
}

//******************************************************************************************
// Turn Green LED On
//******************************************************************************************
void Green_LED_On(void){
	GPIOE->ODR |= GPIO_ODR_ODR_8;
}

//******************************************************************************************
// Turn Green LED Off
//******************************************************************************************
void Green_LED_Off(void){
	GPIOE->ODR &= ~GPIO_ODR_ODR_8;
}

//******************************************************************************************
// Toggle Green LED
//******************************************************************************************
void Green_LED_Toggle(void){
	GPIOE->ODR ^= GPIO_ODR_ODR_8;
}
